#!/usr/bin/env python

import re
import sys
import os
import imp


DEFAULT_CONFIG = dict(
    BRANCH_PATTERN = r'^\w{2,3}/(\d+)',
)

class Config(object):
    def __init__(self, defaults, filename=None):
        for k,v in defaults.items():
            setattr(self, k, v)
        if filename is not None:
            self.load(filename)

    def load(self, filename):
        filename = os.path.expanduser(filename)
        rc = imp.load_source('devhelpers_rc', filename)
        for p in dir(rc):
            if not p.startswith('__'):
                setattr(self, p, getattr(rc, p))


def load_profile():
    with os.popen('git rev-parse --show-toplevel') as p:
        gitdir = p.readline().rstrip('\n') + '/.git'
    usrdir = os.path.expanduser('~')
    for rcfile in [gitdir+'/.dhrc', usrdir+'/.dhrc', None]:
        if rcfile is None or os.path.exists(rcfile):
            break
    return Config(DEFAULT_CONFIG, rcfile)

def story_from_branch(branch_name):
    profile = load_profile()
    story_number = re.search(profile.BRANCH_PATTERN, branch_name)
    return story_number.group(1) if story_number is not None else None

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print "Usage: %s BRANCH_NAME" % sys.argv[0]
        sys.exit(1)
    story_number = story_from_branch(sys.argv[1])
    if story_number is None:
        print >> sys.stderr, 'Fatal: Could not get story number from branch'
        sys.exit(1)
    else:
        print story_number
